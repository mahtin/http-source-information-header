<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
 <!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
 <!ENTITY RFC4892 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4892.xml">
 <!ENTITY RFC5001 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5001.xml">
 <!ENTITY RFC6648 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6648.xml">
 <!ENTITY RFC7230 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7230.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" docName="draft-http-source-information-header-kisteleki-levy-01" ipr="trust200902">
 <front>
   <title abbrev="HTTP Server-ID">HTTP Server-ID header for determining specific anycast instance</title>

   <author fullname="Robert Kisteleki" initials="R." surname="Kisteleki">
     <organization>RIPE NCC</organization>
     <address>
       <postal>
         <street>Singel 258</street>
         <city>Amsterdam</city>
         <region></region>
         <code>1016 AB</code>
         <country>NL</country>
       </postal>
       <phone>+33 20 535 44 44</phone>
       <email>robert@ripe.net</email>
     </address>
   </author>
   <author fullname="Martin J. Levy" initials="M.J." surname="Levy">
     <organization>CloudFlare, Inc.</organization>
     <address>
       <postal>
         <street>101 Townsend Street</street>
         <city>San Francisco</city>
         <region>California</region>
         <code>94107</code>
         <country>US</country>
       </postal>
       <phone>+1 650 319 8939</phone>
       <email>martin@cloudflare.com</email>
     </address>
   </author>

   <date year="2016" />

   <area>General</area>

   <workgroup>Internet Engineering Task Force</workgroup>

   <keyword>HTTP Header</keyword>

   <abstract>
     <t>
This document proposes a new HTTP header field to add an optional identifier
of the HTTP server generating the response to a user request. Such a header
could be used to identifier which geographic-location or server-instance is
being reached by the user. This can be useful in anycast deployments and/or
CDNs.
     </t>
   </abstract>
 </front>

 <middle>

   <section title="Introduction">

     <t>
We propose to add an OPTIONAL HTTP header, Server-ID. The value of such a
filed can be used to identify which location or server instance was reached by
the user, which can be useful in anycast deployments and CDNs. The exact 
syntax for the value if this field is determined by the server operator;
this document does not specify syntactical or semantic constraints.
     </t>

     <t>
While it's not normally important to know where HTTP data is being delivered
from; it can be a useful debugging tool to have that information kept in the HTTP header.
Normally, lower level protocols can be used (traceroute, ping, etc.) to determine the
source end point location. For example, DNS servers can use NSID bit
<xref target="RFC5001"/> to convey this information.
With this header, the data could be there by default within every HTTP transaction.
     </t>

     <t>
Front-end load-balancers can also mask the specific server delivering data. This
is sometimes the desired operational mode. In some cases, for debugging reasons, it's
useful to know the actual source server.
     </t>

     <t>
The source IP address within an HTTP transaction normally can be mapped to a
geographic location when Unicast addressing is used. Anycast services change that
dynamic.
     </t>

     <t>
As more and more web services are delivered from Anycast servers; it becomes
harder to know which physical location information is being delivered from.
     </t>

     <section title="Requirements Language">
       <t>
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
       </t>
     </section>

    </section>

    <section title="The Server-ID Header" anchor="server-id">
     <t>
We propose to add an OPTIONAL HTTP header, Server-ID. The server operator
determines the value of such a field; this document does not specify
syntactical or semantic constraints. However, operators SHOULD use values
that can help clients to interpret the value itself, such as geolocation
codes (UNLOC, <xref target="IATA">IATA codes</xref>, POP identifiers, etc.)
in combination with some kind of server instance identifiers.

We aren't proposing an X-Server-ID header because X- headers are now unused
according to <xref target="RFC6648">RFC6648</xref>.
     </t>

     <t>
The length of the value for this header cannot be more than 4 kilobytes (?)
     </t>
   </section>

   <section title="Examples">
     <t>
The Server-ID header contents can be as simple as the <xref target="IATA">IATA
code</xref> for the airport closest to the servers location. IATA codes are commonly
used within the Internet for names of sites and links.
     </t>

      <figure align="center" anchor="header-example-1">
        <artwork align="left"><![CDATA[
+-----------------------+
| Server-ID: JFK        |
+-----------------------+ ]]></artwork>
        <postamble>A Server-ID header showing the local airport code.</postamble>
      </figure>

     <t>
More complex examples could include specific server information along with
location.
     </t>

      <figure align="center" anchor="header-example-2">
        <artwork align="left"><![CDATA[
+---------------------------------------+
| Server-ID: 2334677359553192-SIN       |
+---------------------------------------+ ]]></artwork>
        <postamble>A Server-ID header showing company specific information along with locations.</postamble>
      </figure>

     <t>
The Server-ID header data SHOULD try not to duplicate the work of existing headers.
For example; not replicating the Powered-By or Server header information.
     </t>

   </section>

    <section title="Recursion">
     <t>
There needs to be a way to address recursion when HTTP headers and content
pass thru proxies or caches. As HTTP header names MUST be unique and only
occur once, any additional server wanting to add content to the Server-ID
header MUST do so in an additive manner.
     </t>

      <figure align="center" anchor="header-before-recursion">
        <artwork align="left"><![CDATA[
+-----------------------+
| Server-ID: JFK        |
+-----------------------+ ]]></artwork>
        <postamble>A Server-ID header before a proxy or cache.</postamble>
      </figure>

      <figure align="center" anchor="header-after-recursion">
        <artwork align="left"><![CDATA[
+-----------------------+
| Server-ID: JFK;EWR    |
+-----------------------+ ]]></artwork>
        <postamble>A Server-ID header after a proxy or cache.</postamble>
      </figure>

     <t>
This document does not specify syntactical or semantic constraints of the
headers value; however, when more than one element is to be placed on a Server-ID
header, then they should be a semicolon-delimited list of elements.
     </t>

   </section>

    <section title="The Via Header">
     <t>
The HTTP <xref target="RFC7230">Via</xref> header was introduced to detect loops
when <xref target="Via-Header">proxies or caches</xref> are used within the HTTP
path. The proposed Server-ID header works independently from that header and
doesn't change its usefulness or functionality.
     </t>

   </section>

   <section title="Acknowledgements" anchor="Acknowledgements">
     <t>
This work was inspired by the work of the <xref target="Atlas">RIPE Atlas</xref>
project and RIPEs need to indentify HTTP servers when they are Anycast.
In addition, this work is based on the existing CF- HTTP header used within
<xref target="CloudFlare">CloudFlare's Anycast CDN deployment</xref>.
     </t>

     <t>
This document is in-part a generalization and specification of already existing
company-specific solutions implemented by CloudFlare.
     </t>
   </section>

   <section title="IANA Considerations" anchor="IANA">

     <t>
Because this draft defines a new header, this document includes a request to IANA.
     </t>

    <section title="Header Field Registration" anchor="header.field.registration">
     <t>
HTTP header fields are registered within the Message Header Field Registry
maintained at <eref target="http://www.iana.org/assignments/message-headers/"/>.
     </t>

     <t>
This document defines the following HTTP header fields, so their associated registry
entries shall be updated according to the permanent registrations below (see <xref target="BCP90"/>):
     </t>

<texttable align="left" suppress-title="true" anchor="iana.header.registration.table">
   <ttcol>Header Field Name</ttcol>
   <ttcol>Protocol</ttcol>
   <ttcol>Status</ttcol>
   <ttcol>Reference</ttcol>

   <c>Server-ID</c>
   <c>http</c>
   <c>standard</c>
   <c>
      <xref target="server-id"/>
   </c>
</texttable>

   </section>

   </section>

   <section title="Security Considerations" anchor="Security">
     <t>
This header, by its very nature, exposes the existence of web servers or
co-location sites or both. Server operators who are concerned about this
exposure should not opt in to this feature.
     </t>
   </section>

 </middle>

 <back>
   <references title="Normative References">
     <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
     &RFC2119;
     &RFC4892;
     &RFC5001;
     &RFC6648;
     &RFC7230;

   </references>

   <references title="Informative References">

     <reference anchor="BCP90">
       <front>
         <title>Registration Procedures for Message Header Fields</title>
         <author initials="G." surname="Klyne" fullname="G. Klyne">
           <organization>Nine by Nine</organization>
           <address><email>GK-IETF@ninebynine.org</email></address>
         </author>
         <author initials="M." surname="Nottingham" fullname="M. Nottingham">
           <organization>BEA Systems</organization>
           <address><email>mnot@pobox.com</email></address>
         </author>
         <author initials="J." surname="Mogul" fullname="J. Mogul">
           <organization>HP Labs</organization>
           <address><email>JeffMogul@acm.org</email></address>
         </author>
         <date year="2004" month="September"/>
       </front>
       <seriesInfo name="BCP" value="90"/>
       <seriesInfo name="RFC" value="3864"/>
     </reference>

     <reference anchor="IATA" target="https://en.wikipedia.org/wiki/List_of_airports_by_IATA_code">
       <front>
         <title>List of airports by IATA code/</title>
         <author>
           <organization>Wikipedia</organization>
         </author>
         <date year="2016" />
       </front>
     </reference>

     <reference anchor="Via-Header" target="https://blog.cloudflare.com/preventing-malicious-request-loops/">
       <front>
         <title>Preventing Malicious Request Loops/</title>
         <author fullname="Nick Sullivan" initials="N.S." surname="Sullivan">
           <organization>CloudFlare</organization>
         </author>
         <date year="2016" />
       </front>
     </reference>

     <reference anchor="Atlas" target="https://atlas.ripe.net/">
       <front>
         <title>RIPE Atlas project</title>
         <author>
           <organization>RIPE NCC</organization>
         </author>
         <date year="2016" />
       </front>
     </reference>

     <reference anchor="CloudFlare" target="https://cloudflare.com/">
       <front>
         <title>CloudFlare, Inc.</title>
         <author>
           <organization>CloudFlare, Inc.</organization>
         </author>
         <date year="2016" />
       </front>
     </reference>

   </references>

   <section title="Additional Stuff" anchor="app-additional">

     <t>
There are existing implementations of similar functionality. They are listed here.
     </t>

     <t>
CloudFlare has implemented a company-specific CF-RAY header to partially provide this functionality.
It has also provided a specific URL to provide additional data.
     </t>

      <figure>
        <artwork><![CDATA[
$ curl -D - https://cloudflare.com/
HTTP/1.1 302 Moved Temporarily
Server: cloudflare-nginx
...
Location: https://www.cloudflare.com/
CF-RAY: 27526e1305df3476-LHR

$ ]]></artwork>
        <postamble>The CF-RAY header in a real HTTP transaction</postamble>
      </figure>

     <t>
CloudFlare has implemented a company-specific URL to partially provide this functionality
     </t>

      <figure>
        <artwork><![CDATA[
$ curl https://cloudflare.com/cdn-cgi/trace
fl=21f76
h=cloudflare.com
ip=2a01:40:5459:1001:404c:a251:6afa:b498
ts=1455554871.885
visit_scheme=https
uag=Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) ...
colo=LHR
spdy=off
loc=GB
$ ]]></artwork>
        <postamble>The cdn-cgi/trace URL</postamble>
      </figure>

     <t>
DNS Name servers provide a similar feature via a specific <xref target="RFC4892">CHAOS</xref> DNS query.
     </t>

      <figure>
        <artwork><![CDATA[
$ dig +short CHAOS TXT 'ID.SERVER' @k.root-servers.net
"ns1.gb-lon.k.ripe.net"
$ ]]></artwork>
        <postamble>A DNS query</postamble>
      </figure>

   </section>

   <!-- Change Log
v00 2016-02-07  RK    Initial text
v01 2016-02-14  MJL   Initial xml draft version
v01 2016-02-15  RK    Initial edits
v01 2016-02-15  MJL   More stuff
    -->

 </back>
</rfc>
